proc initial_values(){
	dend_na12 =0.0001/2
	dend_k = 0.004226
	soma_na12 = 0.983955/2	
	soma_K = 0.303472
	node_na = 2
	axon_KP =0.973538
	axon_KT = 0.089259
	axon_K = 1.021945
	ais_na16		=	7 //3.137968
	ais_na12		=	5 //3.137968
	ais_ca = 0.000990
	ais_KCa = 0.007104



	soma_na16 = soma_na12
	naked_axon_na = soma_na16/5
	//navshift = -10
	dend_na16 =dend_na12
	myelin_na = naked_axon_na
	myelin_K = 0.303472
	myelin_scale = 10
	gpas_all = 3e-5
	cm_all = 1
	
	A_factor = 0.5
	N_factor = 0.5
	Mut_factor = 0.5
	WT_factor = 0.5
}
proc update_Nas(){
	soma_na12A = soma_na12*A_factor
	soma_na12N = soma_na12*N_factor
	soma_na12AWT = soma_na12A*WT_factor
	soma_na12AMut = soma_na12A*Mut_factor
	soma_na12NWT = soma_na12N*WT_factor
	soma_na12NMut = soma_na12N*Mut_factor
	
	
	ais_na12A = ais_na12*A_factor
	ais_na12N = ais_na12*N_factor
	ais_na12AWT = ais_na12A*WT_factor
	ais_na12AMut = ais_na12A*Mut_factor
	ais_na12NWT = ais_na12N*WT_factor
	ais_na12NMut = ais_na12N*Mut_factor
	
	
	dend_na12A = dend_na12*A_factor
	dend_na12N = dend_na12*N_factor
	dend_na12AWT = dend_na12A*WT_factor
	dend_na12AMut = dend_na12A*Mut_factor
	dend_na12NWT = dend_na12N*WT_factor
	dend_na12NMut = dend_na12N*Mut_factor
}

proc update_Nas_for_young(){
	
	//Here we will update_Nas of the Nav16 but will assign it to Na12 channels..
	//IMPORTANT the main difference between the _young proc and the adult one is that we take each na16 line and have 
	node_na16A = node_na*A_factor
	node_na16N = node_na*N_factor
	node_na16AWT = node_na16A*WT_factor
	node_na16AMut = node_na16A*Mut_factor
	node_na16NWT = node_na16N*WT_factor
	node_na16NMut = node_na16N*Mut_factor
	
	myelin_na16A = myelin_na*A_factor
	myelin_na16N = myelin_na*N_factor
	myelin_na16AWT = myelin_na16A*WT_factor
	myelin_na16AMut = myelin_na16A*Mut_factor
	myelin_na16NWT = myelin_na16N*WT_factor
	myelin_na16NMut = myelin_na16N*Mut_factor
	
	soma_na16A = soma_na16*A_factor
	soma_na16N = soma_na16*N_factor
	soma_na16AWT = soma_na16A*WT_factor
	soma_na16AMut = soma_na16A*Mut_factor
	soma_na16NWT = soma_na16N*WT_factor
	soma_na16NMut = soma_na16N*Mut_factor
	
	
	ais_na16A = ais_na16*A_factor
	ais_na16N = ais_na16*N_factor
	ais_na16AWT = ais_na16A*WT_factor
	ais_na16AMut = ais_na16A*Mut_factor
	ais_na16NWT = ais_na16N*WT_factor
	ais_na16NMut = ais_na16N*Mut_factor
	
	
	dend_na16A = dend_na16*A_factor
	dend_na16N = dend_na16*N_factor
	dend_na16AWT = dend_na16A*WT_factor
	dend_na16AMut = dend_na16A*Mut_factor
	dend_na16NWT = dend_na16N*WT_factor
	dend_na16NMut = dend_na16N*Mut_factor
	
	
	naked_axon16A = naked_axon_na*A_factor
	naked_axon16N = naked_axon_na*N_factor
	naked_axon16AWT = naked_axon16A*WT_factor
	naked_axon16AMut = naked_axon16A*Mut_factor
	naked_axon16NWT = naked_axon16N*WT_factor
	naked_axon16NMut = naked_axon16N*Mut_factor
	
}

// modify the axon for Roy's purposes (whole thing)
proc populate_axon(){
	forsec cell.axonal{
			gNaTa_tbar_NaTa_t = 0
			gNap_Et2bar_Nap_Et2 = 0
			gCa_HVAbar_Ca_HVA = 0 
			gSK_E2bar_SK_E2 = 0
			nseg=11
			g_pas(0:0.1) = (gpas_all/myelin_scale):(gpas_all/myelin_scale)
			g_pas(0.1:1) = gpas_all:gpas_all
			cm(0:0.1) = (cm_all/myelin_scale):(cm_all/myelin_scale)
			cm(0.1:1) = cm_all:cm_all
			gbar_na16(0:0.1) = node_na:node_na
			gbar_na16(0.1:1) = myelin_na:myelin_na
			gSKv3_1bar_SKv3_1(0:0.1) = axon_K:axon_K
			gSKv3_1bar_SKv3_1(0.1:1) = myelin_K:myelin_K
			gK_Pstbar_K_Pst(0:0.1) = axon_KP:axon_KP
			gK_Pstbar_K_Pst(0.1:1) = axon_KP/10:axon_KP/10
			gK_Tstbar_K_Tst(0:0.1) = axon_KT:axon_KT
			gK_Tstbar_K_Tst(0.1:1) = axon_KT/10:axon_KT/10	
		}
}


proc populate_axon_young(){
	forsec cell.axonal{
			gNaTa_tbar_NaTa_t = 0
			gNap_Et2bar_Nap_Et2 = 0
			gCa_HVAbar_Ca_HVA = 0 
			gSK_E2bar_SK_E2 = 0
			gbar_na12A = 0
			gbar_na12A_Mut = 0
			gbar_na12N = 0
			gbar_na12N_Mut = 0
			gbar_na16 = 0
			nseg=11
			g_pas(0:0.1) = (gpas_all/myelin_scale):(gpas_all/myelin_scale)
			g_pas(0.1:1) = gpas_all:gpas_all
			cm(0:0.1) = (cm_all/myelin_scale):(cm_all/myelin_scale)
			cm(0.1:1) = cm_all:cm_all
			
			gbar_na12A(0:0.1) = node_na16AWT:node_na16AWT
			gbar_na12A_Mut(0:0.1) = node_na16AMut:node_na16AMut
			gbar_na12N(0:0.1) = node_na16NWT:node_na16NWT
			gbar_na12N_Mut(0:0.1) = node_na16NMut:node_na16NMut
			
			gbar_na12A(0.1:1) = myelin_na16AWT:myelin_na16AWT
			gbar_na12A_Mut(0.1:1) = myelin_na16AMut:myelin_na16AMut
			gbar_na12N(0.1:1) = myelin_na16NWT:myelin_na16NWT
			gbar_na12N_Mut(0.1:1) = myelin_na16NMut:myelin_na16NMut
			
			
			gSKv3_1bar_SKv3_1(0:0.1) = axon_K:axon_K
			gSKv3_1bar_SKv3_1(0.1:1) = myelin_K:myelin_K
			gK_Pstbar_K_Pst(0:0.1) = axon_KP:axon_KP
			gK_Pstbar_K_Pst(0.1:1) = axon_KP/10:axon_KP/10
			gK_Tstbar_K_Tst(0:0.1) = axon_KT:axon_KT
			gK_Tstbar_K_Tst(0.1:1) = axon_KT/10:axon_KT/10	
		}
}


// Specifically modify the first segment to create an AIS
proc create_ais(){
access cell.axon[0]
	gbar_na12A = 0
	gbar_na12A_Mut = 0
	gbar_na12N = 0
	gbar_na12N_Mut = 0
	gbar_na16 = 0
	gNaTa_tbar_NaTa_t = 0 // Get rid of old sodium channels
	gNap_Et2bar_Nap_Et2 = 0  // Get rid of old sodium channels
	
	nseg = int(L/10)*2 +1  // create 19 segments from this axon section
	ais_end = 10/nseg // specify the end of the AIS as halfway down this section
	ais_mid = 4/nseg // specify the middle of the AIS as 1/5 of this section 
	gbar_na16(0:ais_mid) = 0:ais_na16 // from the start to mid of AIS, create gradient of NaV1.6
	gbar_na16(ais_mid:ais_end) = ais_na16:ais_na16 // add consistent amount NaV1.6 until the end of the AIS
	gbar_na16(ais_end:1) = naked_axon_na:naked_axon_na // 1/5th nav1.6
	
	gbar_na12A(0:ais_mid/2) = soma_na12AWT:ais_na12AWT // create gradient of NaV12 from [soma] to [AIS]
	gbar_na12A_Mut(0:ais_mid/2) = soma_na12AMut:ais_na12AMut // create gradient of NaV12 from [soma] to [AIS]
	gbar_na12N(0:ais_mid/2) = soma_na12NWT:ais_na12NWT // create gradient of NaV12 from [soma] to [AIS]
	gbar_na12N_Mut(0:ais_mid/2) = soma_na12NMut:ais_na12NMut // create gradient of NaV12 from [soma] to [AIS]
		
	gbar_na12A(ais_mid/2:ais_mid) = ais_na12AWT:0 // create gradient down to zero
	gbar_na12A_Mut(ais_mid/2:ais_mid) = ais_na12AMut:0 // create gradient down to zero
	gbar_na12N(ais_mid/2:ais_mid) = ais_na12NWT:0 // create gradient down to zero
	gbar_na12N_Mut(ais_mid/2:ais_mid) = ais_na12NMut:0 // create gradient down to zero
	
	gbar_na12A(ais_mid:1) = 0:0 //zeroing naked axon to be on the safe side
	gbar_na12A_Mut(ais_mid:1) = 0:0 //zeroing naked axon to be on the safe side
	gbar_na12N(ais_mid:1) = 0:0 //zeroing naked axon to be on the safe side
	gbar_na12N_Mut(ais_mid:1) = 0:0 //zeroing naked axon to be on the safe side
	
	gK_Pstbar_K_Pst(0:ais_end) = axon_KP:axon_KP
	gK_Pstbar_K_Pst(ais_end:1) = axon_KP/10:axon_KP/10
	gK_Tstbar_K_Tst(0:ais_end) = axon_KT:axon_KT
	gK_Tstbar_K_Tst(ais_end:1) = axon_KT/10:axon_KT/10
	gSKv3_1bar_SKv3_1(0:ais_end) = axon_K:axon_K
	gSKv3_1bar_SKv3_1(ais_end:1) = axon_K/10:axon_K/10
	gCa_HVAbar_Ca_HVA(0:ais_end) = ais_ca:ais_ca
	gCa_HVAbar_Ca_HVA(0:ais_end) = ais_ca/10:ais_ca/10
	gSK_E2bar_SK_E2(0:ais_end) = ais_KCa:ais_KCa // SK channel
	gSK_E2bar_SK_E2(ais_end:1) = ais_KCa/10:ais_KCa/10
	
			
	
access cell.soma
}
proc create_ais_young(){
access cell.axon[0]
	gbar_na12A = 0
	gbar_na12A_Mut = 0
	gbar_na12N = 0
	gbar_na12N_Mut = 0
	gbar_na16 = 0
	gNaTa_tbar_NaTa_t = 0 // Get rid of old sodium channels
	gNap_Et2bar_Nap_Et2 = 0  // Get rid of old sodium channels
	
	nseg = int(L/10)*2 +1  // create 19 segments from this axon section
	ais_end = 10/nseg // specify the end of the AIS as halfway down this section
	ais_mid = 4/nseg // specify the middle of the AIS as 1/5 of this section 
	
	//Here we add the two linear functions of na12 and na16 in two segments 0:ais_mid/2 which will be the ais_na12 (the max of na12 is in the ais_mid/2) + 0.5ais_na16 (the max of ais16 is at ais_mid and increasing linearly):
	//it sums the two lines: gbar_na12(0:ais_mid/2) = soma_na12:ais_na12 and gbar_na16(0:ais_mid) = 0:ais_na16 
	gbar_na12A(0:ais_mid/2) = soma_na12AWT:(ais_na12AWT + 0.5*ais_na16AWT) 
	gbar_na12A_Mut(0:ais_mid/2) = soma_na12AMut:(ais_na12AMut + 0.5*ais_na16AMut)
	gbar_na12N(0:ais_mid/2) = soma_na12NWT:(ais_na12NWT + 0.5*ais_na16NWT) 
	gbar_na12N_Mut(0:ais_mid/2) = soma_na12NMut:(ais_na12NMut + 0.5*ais_na16NMut)	
	
	//Here we sums the two lines: gbar_na16(ais_mid:ais_end) = ais_na16:ais_na16  and gbar_na12(ais_mid:ais_end) = ais_na12:0
	gbar_na12A((ais_mid/2):ais_end) = (ais_na12AWT + 0.5*ais_na16AWT):ais_na16AWT
	gbar_na12A_Mut((ais_mid/2):ais_end) = (ais_na12AMut + 0.5*ais_na16AMut):ais_na16AMut
	gbar_na12N((ais_mid/2):ais_end) = (ais_na12NWT + 0.5*ais_na16NWT):ais_na16NWT
	gbar_na12N_Mut((ais_mid/2):ais_end) = (ais_na12NMut + 0.5*ais_na16NMut):ais_na16NMut
	
	gbar_na12A(ais_end:1) = naked_axon16AWT:naked_axon16AWT
	gbar_na12A_Mut(ais_end:1) = naked_axon16AMut:naked_axon16AMut
	gbar_na12N(ais_end:1) = naked_axon16NWT:naked_axon16NWT
	gbar_na12N_Mut(ais_end:1) = naked_axon16NMut:naked_axon16NMut
	
	gK_Pstbar_K_Pst(0:ais_end) = axon_KP:axon_KP
	gK_Pstbar_K_Pst(ais_end:1) = axon_KP/10:axon_KP/10
	gK_Tstbar_K_Tst(0:ais_end) = axon_KT:axon_KT
	gK_Tstbar_K_Tst(ais_end:1) = axon_KT/10:axon_KT/10
	gSKv3_1bar_SKv3_1(0:ais_end) = axon_K:axon_K
	gSKv3_1bar_SKv3_1(ais_end:1) = axon_K/10:axon_K/10
	gCa_HVAbar_Ca_HVA(0:ais_end) = ais_ca:ais_ca
	gCa_HVAbar_Ca_HVA(0:ais_end) = ais_ca/10:ais_ca/10
	gSK_E2bar_SK_E2(0:ais_end) = ais_KCa:ais_KCa // SK channel
	gSK_E2bar_SK_E2(ais_end:1) = ais_KCa/10:ais_KCa/10
	
			
	
access cell.soma
}




proc update_soma_na(){
access cell.soma
	gbar_na12A = soma_na12AWT
	gbar_na12A_Mut = soma_na12AMut
	gbar_na12N = soma_na12NWT
	gbar_na12N_Mut = soma_na12NMut
	gbar_na16 = soma_na16
	gNaTs2_tbar_NaTs2_t = 0

}

proc update_soma_na_young(){
access cell.soma
	gbar_na16 = 0
	gNaTs2_tbar_NaTs2_t = 0
	gbar_na12A = soma_na16AWT
	gbar_na12A_Mut = soma_na16AMut
	gbar_na12N = soma_na16NWT
	gbar_na12N_Mut = soma_na16NMut
}



proc update_dend_na(){
forsec cell.apical{
	
	gbar_na12A = dend_na12AWT
	gbar_na12A_Mut = dend_na12AMut
	gbar_na12N = dend_na12NWT
	gbar_na12N_Mut = dend_na12NMut
	gbar_na16 = dend_na16
	gNaTs2_tbar_NaTs2_t = 0
	
	
	}

}

proc update_dend_na_young(){
forsec cell.apical{
	gbar_na16 = 0
	gNaTs2_tbar_NaTs2_t = 0
	gbar_na12A = dend_na16AWT
	gbar_na12A_Mut = dend_na16AMut
	gbar_na12N = dend_na16NWT
	gbar_na12N_Mut = dend_na16NMut
	
	
	}

}



proc working(){
	update_Nas()
	populate_axon()
	create_ais()
	update_soma_na()
	update_dend_na()

}

proc working_young(){
	update_Nas()
	update_Nas_for_young()
	populate_axon_young()
	create_ais_young()
	update_soma_na_young()
	update_dend_na_young()

}

proc run_gui(){
		
xpanel("params_values")
xvalue("ais_na12",&ais_na12	)
xvalue("ais_na16",&ais_na16)
xvalue("node_na",&node_na)
xvalue("soma_na16",&soma_na16) 
xvalue("na_soma",&navshift)
xbutton("create_ais()")
xbutton("populate_axon()")
xbutton("update_soma_na()")
//xbutton("printVs()")
xpanel()
}
//run_gui()
initial_values()  
access cell.axon[0]
	L=90
		
access cell.soma
//working()

